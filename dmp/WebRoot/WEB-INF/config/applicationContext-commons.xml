<?xml version="1.0" encoding="UTF-8"?>
<beans 
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" 
	xmlns:jee="http://www.springframework.org/schema/jee" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:hdp="http://www.springframework.org/schema/hadoop"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd
		http://www.springframework.org/schema/hadoop http://www.springframework.org/schema/hadoop/spring-hadoop-2.0.xsd"  
		default-destroy-method="destroy"  
		default-init-method="init">

	<import resource="applicationContext-dataSource.xml"/>

	<!-- 开启组件扫描 -->
	<context:component-scan base-package="com.jybb..*"></context:component-scan>
      
	<!-- 开启springMVC注解扫描 -->
	<mvc:annotation-driven></mvc:annotation-driven>
	
	<!-- 配置视图 -->
	<bean id="internalResourceViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>
	
	<!-- 配置mybatis Session工厂类 -->
	<bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="mapperLocations" value="classpath:com/jybb/mapper/*.xml"></property>
	</bean>
	<!-- 配置mapper映射 -->	
	<bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryBean"></property>
		<property name="basePackage" value="com.jybb.mapper"></property>
		<property name="annotationClass" value="com.jybb.annotation.MybatisRepository"></property>
	</bean>
	
	<!-- 配置mybatis Session工厂类 -->
	<bean id="membersSqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="membersDataSource"></property>
		<property name="mapperLocations" value="classpath:com/jybb/membersMapper/*.xml"></property>
	</bean>
	<!-- 配置mapper映射 -->	
	<bean id="membersMapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="membersSqlSessionFactoryBean"></property>
		<property name="basePackage" value="com.jybb.membersMapper"></property>
		<property name="annotationClass" value="com.jybb.annotation.MybatisRepository"></property>
	</bean>
	
	 	<!--配置事务  -->  
    <bean id="transactionManager"  
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="dataSource" />  
    </bean>  
    <!--  配置事务传播特性 -->
	<tx:advice id="advice" transaction-manager="transactionManager">
	    <tx:attributes>
	      <tx:method name="save*" propagation="REQUIRED"/>
	      <tx:method name="insert*" propagation="REQUIRED"/>
	      <tx:method name="delete*" propagation="REQUIRED"/>
	      <tx:method name="update*" propagation="REQUIRED"/>
	      <tx:method name="add*" propagation="REQUIRED"/>
	      <tx:method name="find*" propagation="REQUIRED"/>
	      <tx:method name="get*" propagation="REQUIRED"/>
	    </tx:attributes>
	</tx:advice>
	<!--  配置参与事务的类 -->
	<aop:config>
		<aop:pointcut id="allControllerMethod" expression="execution(* com.jybb.controller.*.*(..))"/>
		<aop:advisor pointcut-ref="allControllerMethod" advice-ref="advice" />
	</aop:config>
	
	 <!-- 使用aop增强, 织入hbase数据库链接的开启和关闭  -->  
	
	<!-- 登陆拦截 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/*/*"/>
			<mvc:exclude-mapping path="/login/login.do"/>
			<mvc:exclude-mapping path="/login/toLogin.do"/>
			<mvc:exclude-mapping path="/login/out.do"/>
			<bean id="loginInterceptor" class="com.jybb.interceptor.LoginInterceptor"></bean>
		</mvc:interceptor>
	</mvc:interceptors>
	
	<!-- 异常处理 
	<bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">     
         <property name="exceptionMappings">     
             <props>     
                 <prop key="java.lang.Exception">errors/exc</prop>     
                 <prop key="java.lang.Throwable">errors/err</prop>     
             </props>     
         </property>
         	 设置日志输出级别，不定义则默认不输出警告等错误日志信息 
         <property name="warnLogCategory" value="WARN"></property>     
        	 默认错误页面，当找不到上面mappings中指定的异常对应视图时，使用本默认配置 
         <property name="defaultErrorView" value="errors/exc"></property>     
     </bean>	
     -->
</beans>